services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: alpespartners
      POSTGRES_USER: postgres_user
      POSTGRES_PASSWORD: 1234
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres_user -d alpespartners -h 127.0.0.1"]
      interval: 3s
      timeout: 3s
      retries: 10
    volumes:
      - pgdata:/var/lib/postgresql/data
  web:
    build: 
      context: .
      dockerfile: ./Dockerfile   
    ports:
      - "5000:5000"
    environment:
      POSTGRES_DB: alpespartners
      POSTGRES_USER: postgres_user
      POSTGRES_PASSWORD: 1234
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      PULSAR_SERVICE_URL: pulsar://pulsar:6650
      PULSAR_ADMIN_URL: http://pulsar:8080
    depends_on:
      db:
        condition: service_healthy
      pulsar:
        condition: service_healthy
  pulsar:
    image: apachepulsar/pulsar:3.1.0
    command: >
      bash -c "
        bin/pulsar standalone --no-functions-worker --no-stream-storage
      "
    ports:
      - "6650:6650"  # Pulsar service port
      - "8080:8080"  # Pulsar admin port
    environment:
      PULSAR_MEM: "-Xms512m -Xmx512m -XX:MaxDirectMemorySize=1g"
    volumes:
      - pulsardata:/pulsar/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/admin/v2/clusters"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
  pulsar-manager:
    image: apachepulsar/pulsar-manager:v0.4.0
    ports:
      - "9527:9527"  # Pulsar Manager web UI
      - "7750:7750"  # Pulsar Manager backend
    environment:
      SPRING_CONFIGURATION_FILE: /pulsar-manager/pulsar-manager/application.properties
    volumes:
      - pulsarmanagerdata:/data
    depends_on:
      pulsar:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9527"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
volumes:
  pgdata:
  pulsardata:
  pulsarmanagerdata:
