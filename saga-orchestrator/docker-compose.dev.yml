
# Development-focused Docker Compose - only infrastructure services
# Use this when you want to run the saga orchestrator locally for development

services:
  # PostgreSQL database for saga state persistence
  postgres:
    image: postgres:15-alpine
    container_name: saga-postgres-dev
    environment:
      POSTGRES_DB: saga_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - saga-dev-network

  # Apache Pulsar for event messaging
  pulsar:
    image: apachepulsar/pulsar:3.1.0
    container_name: saga-pulsar-dev
    command: bin/pulsar standalone
    ports:
      - "6650:6650"  # Pulsar broker
      - "8081:8080"  # Pulsar admin (changed to avoid conflict)
    environment:
      - PULSAR_MEM=-Xms512m -Xmx512m -XX:MaxDirectMemorySize=256m
    volumes:
      - pulsar_dev_data:/pulsar/data
    healthcheck:
      test: ["CMD", "bin/pulsar-admin", "brokers", "healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - saga-dev-network

  # Pulsar Manager for UI management
  pulsar-manager:
    image: apachepulsar/pulsar-manager:v0.3.0
    container_name: saga-pulsar-manager-dev
    ports:
      - "9527:9527"
      - "7750:7750"
    environment:
      - SPRING_CONFIGURATION_FILE=/pulsar-manager/pulsar-manager/application.properties
    depends_on:
      - pulsar
    networks:
      - saga-dev-network

volumes:
  postgres_dev_data:
    driver: local
  pulsar_dev_data:
    driver: local

networks:
  saga-dev-network:
    driver: bridge
